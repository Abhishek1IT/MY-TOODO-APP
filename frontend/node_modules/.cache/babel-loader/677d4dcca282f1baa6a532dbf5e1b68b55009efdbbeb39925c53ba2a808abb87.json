{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"http://localhost:3000\";\nawait axios.post(\"/todos\", {\n  title: this.newTodo,\n  completed: false\n});\nexport default {\n  name: \"TodoApp\",\n  data() {\n    return {\n      todos: [],\n      newTodo: \"\"\n    };\n  },\n  methods: {\n    async fetchTodos() {\n      try {\n        const res = await axios.get(\"/todos\");\n        this.todos = res.data;\n      } catch (err) {\n        console.error(\"Error fetching todos:\", err.message);\n      }\n    },\n    async addTodo() {\n      if (!this.newTodo.trim()) return;\n      try {\n        const res = await axios.post(\"/todos\", {\n          title: this.newTodo,\n          completed: false\n        });\n        this.todos.push(res.data);\n        this.newTodo = \"\";\n      } catch (err) {\n        console.error(\"Error adding todos:\", err.message);\n      }\n    },\n    async toggleTodo(todo) {\n      try {\n        const updated = {\n          ...todo,\n          completed: !todo.completed\n        };\n        await axios.put(`/todos/${todo._id}`, updated);\n        todo.completed = !todo.completed; // Update UI immediately\n      } catch (err) {\n        console.error(\"Error toggling todo:\", err.message);\n      }\n    },\n    async updateTodo(todo) {\n      try {\n        await axios.put(`/todos/${todo._id}`, todo);\n      } catch (err) {\n        console.error(\"Error updating todos:\", err.message);\n      }\n    },\n    async deleteTodo(id) {\n      try {\n        await axios.delete(`/todos/${id}`);\n        this.todos = this.todos.filter(todo => todo._id !== id);\n      } catch (err) {\n        console.error(\"Error deleting todos:\", err.message);\n      }\n    }\n  },\n  mounted() {\n    this.fetchTodos();\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","post","title","newTodo","completed","name","data","todos","methods","fetchTodos","res","get","err","console","error","message","addTodo","trim","push","toggleTodo","todo","updated","put","_id","updateTodo","deleteTodo","id","delete","filter","mounted"],"sources":["C:\\Users\\abhis\\Desktop\\My-Toodo-App\\frontend\\src\\components\\TodoApp.vue"],"sourcesContent":["<template>\n  <div class=\"todo-app\">\n    <form @submit.prevent=\"addTodo\">\n      <input type=\"text\" v-model=\"newTodo\" placeholder=\"Add todo...\" />\n      <button type=\"submit\" :disabled=\"!newTodo.trim()\">Add</button>\n    </form>\n\n    <ul>\n      <li v-for=\"todo in todos\" :key=\"todo._id\">\n        <input\n          type=\"checkbox\"\n          v-model=\"todo.completed\"\n          @change=\"toggleTodo(todo)\"\n        />\n        <span :class=\"{ done: todo.completed }\">{{ todo.title }}</span>\n        <button @click=\"updateTodo(todo)\" v-if=\"!todo.completed\">\n          Edit\n        </button>\n        <button @click=\"deleteTodo(todo._id)\" v-if=\"!todo.completed\">\n          Delete\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\nawait axios.post(\"/todos\", { title: this.newTodo, completed: false });\n\nexport default {\n  name: \"TodoApp\",\n  data() {\n    return {\n      todos: [],\n      newTodo: \"\"\n    };\n  },\n  methods: {\n    async fetchTodos() {\n      try {\n        const res = await axios.get(\"/todos\"); \n        this.todos = res.data;\n      } catch (err) {\n        console.error(\"Error fetching todos:\", err.message);\n      }\n    },\n\n    async addTodo() {\n      if (!this.newTodo.trim()) return;\n\n      try {\n        const res = await axios.post(\"/todos\", {\n          title: this.newTodo,\n          completed: false\n        });\n        this.todos.push(res.data);\n        this.newTodo = \"\";\n      } catch (err) {\n        console.error(\"Error adding todos:\", err.message);\n      }\n    },\n\n    async toggleTodo(todo) {\n      try {\n        const updated = { ...todo, completed: !todo.completed };\n        await axios.put(`/todos/${todo._id}`, updated);\n        todo.completed = !todo.completed; // Update UI immediately\n      } catch (err) {\n        console.error(\"Error toggling todo:\", err.message);\n      }\n    },\n\n    async updateTodo(todo) {\n      try {\n        await axios.put(`/todos/${todo._id}`, todo);\n      } catch (err) {\n        console.error(\"Error updating todos:\", err.message);\n      }\n    },\n\n    async deleteTodo(id) {\n      try {\n        await axios.delete(`/todos/${id}`);\n        this.todos = this.todos.filter(todo => todo._id !== id);\n      } catch (err) {\n        console.error(\"Error deleting todos:\", err.message);\n      }\n    }\n  },\n\n  mounted() {\n    this.fetchTodos();\n  }\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #68eddbff;\n  padding: 20px;\n}\n\n.todo-app {\n  padding: 10px;\n  max-width: 500px;\n  margin: auto;\n  font-family: Arial;\n}\n\nform {\n  margin-bottom: 20px;\n}\n\ninput[type=\"text\"] {\n  border: 1px solid #f7a5a5ff;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px;\n  width: 70%;\n}\n\nbutton {\n  padding: 8px 12px;\n  margin-left: 10px;\n  background-color: #7a83feff;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\nbutton:hover:not(:disabled) {\n  background-color: #96ccf3ff;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\nli {\n  padding: 6px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nli:hover {\n  background: #f7f7f7;\n}\n\n.done {\n  text-decoration: line-through;\n  color: gray;\n}\n</style>\n"],"mappings":";;;AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAM,GAAI,uBAAuB;AAChD,MAAMF,KAAK,CAACG,IAAI,CAAC,QAAQ,EAAE;EAAEC,KAAK,EAAE,IAAI,CAACC,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAC,CAAC;AAErE,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTJ,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDK,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,GAAE,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,QAAQ,CAAC;QACrC,IAAI,CAACJ,KAAI,GAAIG,GAAG,CAACJ,IAAI;MACvB,EAAE,OAAOM,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAACG,OAAO,CAAC;MACrD;IACF,CAAC;IAED,MAAMC,OAAOA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,CAAC,EAAE;MAE1B,IAAI;QACF,MAAMP,GAAE,GAAI,MAAMZ,KAAK,CAACG,IAAI,CAAC,QAAQ,EAAE;UACrCC,KAAK,EAAE,IAAI,CAACC,OAAO;UACnBC,SAAS,EAAE;QACb,CAAC,CAAC;QACF,IAAI,CAACG,KAAK,CAACW,IAAI,CAACR,GAAG,CAACJ,IAAI,CAAC;QACzB,IAAI,CAACH,OAAM,GAAI,EAAE;MACnB,EAAE,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAACG,OAAO,CAAC;MACnD;IACF,CAAC;IAED,MAAMI,UAAUA,CAACC,IAAI,EAAE;MACrB,IAAI;QACF,MAAMC,OAAM,GAAI;UAAE,GAAGD,IAAI;UAAEhB,SAAS,EAAE,CAACgB,IAAI,CAAChB;QAAU,CAAC;QACvD,MAAMN,KAAK,CAACwB,GAAG,CAAC,UAAUF,IAAI,CAACG,GAAG,EAAE,EAAEF,OAAO,CAAC;QAC9CD,IAAI,CAAChB,SAAQ,GAAI,CAACgB,IAAI,CAAChB,SAAS,EAAE;MACpC,EAAE,OAAOQ,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAACG,OAAO,CAAC;MACpD;IACF,CAAC;IAED,MAAMS,UAAUA,CAACJ,IAAI,EAAE;MACrB,IAAI;QACF,MAAMtB,KAAK,CAACwB,GAAG,CAAC,UAAUF,IAAI,CAACG,GAAG,EAAE,EAAEH,IAAI,CAAC;MAC7C,EAAE,OAAOR,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAACG,OAAO,CAAC;MACrD;IACF,CAAC;IAED,MAAMU,UAAUA,CAACC,EAAE,EAAE;MACnB,IAAI;QACF,MAAM5B,KAAK,CAAC6B,MAAM,CAAC,UAAUD,EAAE,EAAE,CAAC;QAClC,IAAI,CAACnB,KAAI,GAAI,IAAI,CAACA,KAAK,CAACqB,MAAM,CAACR,IAAG,IAAKA,IAAI,CAACG,GAAE,KAAMG,EAAE,CAAC;MACzD,EAAE,OAAOd,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAACG,OAAO,CAAC;MACrD;IACF;EACF,CAAC;EAEDc,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}