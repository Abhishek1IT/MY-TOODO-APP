{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"My Todo App\", -1 /* CACHED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo._id\n    }, [_createTextVNode(_toDisplayString(todo.text) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTodo(todo._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"button\", {\n      onClick: $event => $options.editTodo(todo)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_2)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["style","_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","todos","todo","key","_id","text","onClick","$event","$options","deleteTodo","_hoisted_1","editTodo","_hoisted_2","error","_hoisted_3","_toDisplayString"],"sources":["C:\\Users\\abhis\\Desktop\\My-Toodo-App\\frontend\\src\\components\\TodoApp.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>My Todo App</h1>\n    <ul>\n      <li v-for=\"todo in todos\" :key=\"todo._id\">\n        {{ todo.text }}\n        <div>\n          <button @click=\"deleteTodo(todo._id)\">Delete</button>\n          <button @click=\"editTodo(todo)\">Edit</button>\n        </div>\n      </li>\n    </ul>\n\n    <p v-if=\"error\" style=\"color: red;\">{{ error }}</p>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      todos: [],\n      newTodo: \"\",\n      error: \"\",\n    };\n  },\n  mounted() {\n    this.getTodos();\n  },\n  methods: {\n    async getTodos() {\n      try {\n        const res = await axios.get(\"http://localhost:3000/api/\");\n        this.todos = res.data;\n      } catch (err) {\n        this.error = \"Could not fetch todos\";\n      }\n    },\n    async addTodo() {\n      if (!this.newTodo.trim()) return;\n      try {\n        const res = await axios.post(\"http://localhost:3000/api/\", {\n          text: this.newTodo,\n          completed: false,\n        });\n        this.todos.push(res.data);\n        this.newTodo = \"\";\n      } catch (err) {\n        this.error = \"Failed to add todo\";\n      }\n    },\n    async deleteTodo(id) {\n      try {\n        await axios.delete(`http://localhost:3000/api/${id}`);\n        this.todos = this.todos.filter((todo) => todo._id !== id);\n      } catch (err) {\n        this.error = \"Failed to delete todo\";\n      }\n    },\n    async toggleTodo(todo) {\n      try {\n        await axios.put(`http://localhost:3000/api/${todo._id}`, {\n          completed: todo.completed,\n        });\n      } catch (err) {\n        this.error = \"Failed to update todo\";\n      }\n    },\n    editTodo(todo) {\n      const updatedText = prompt(\"Edit your todo:\", todo.text);\n      if (updatedText && updatedText.trim()) {\n        axios\n          .put(`http://localhost:3000/api/${todo._id}`, {\n            text: updatedText.trim(),\n            completed: todo.completed,\n          })\n          .then((res) => {\n            todo.text = res.data.text;\n          })\n          .catch(() => {\n            this.error = \"Failed to update todo text\";\n          });\n      }\n    },\n  },\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\nbody {\n  background-color: #68eddbff;\n  padding: 20px;\n}\n.todo-app {\n  padding: 10px;\n  max-width: 500px;\n  margin: auto;\n  font-family: Arial;\n}\nform {\n  margin-bottom: 20px;\n}\ninput[type=\"text\"] {\n  padding: 8px;\n  width: 70%;\n}\nbutton {\n  padding: 8px 12px;\n  margin-left: 10px;\n \n}\nbutton:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\nul {\n  list-style: none;\n  padding: 0;\n}\nli {\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n</style>\n"],"mappings":";;;;;EAaoBA,KAAmB,EAAnB;IAAA;EAAA;;;uBAZlBC,mBAAA,CAaM,c,0BAZJC,mBAAA,CAAoB,YAAhB,aAAW,qBACfA,mBAAA,CAQK,c,kBAPHD,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANcC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAMK;MANsBO,GAAG,EAAED,IAAI,CAACE;0CAChCF,IAAI,CAACG,IAAI,IAAG,GACf,iBAAAR,mBAAA,CAGM,cAFJA,mBAAA,CAAqD;MAA5CS,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACP,IAAI,CAACE,GAAG;OAAG,QAAM,iBAAAM,UAAA,GAC5Cb,mBAAA,CAA6C;MAApCS,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAG,QAAQ,CAACT,IAAI;OAAG,MAAI,iBAAAU,UAAA,E;oCAKjCZ,KAAA,CAAAa,KAAK,I,cAAdjB,mBAAA,CAAmD,KAAnDkB,UAAmD,EAAAC,gBAAA,CAAZf,KAAA,CAAAa,KAAK,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}