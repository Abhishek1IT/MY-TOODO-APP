{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"todo-app\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onChange\"];\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"My ToDo List\", -1 /* CACHED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addTodo && $options.addTodo(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodo = $event),\n    placeholder: \"Add todo...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newTodo]]), _cache[2] || (_cache[2] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Add\", -1 /* CACHED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo._id\n    }, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => todo.completed = $event,\n      onChange: $event => $options.toggleTodo(todo)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), [[_vModelCheckbox, todo.completed]]), _createTextVNode(\" \" + _toDisplayString(todo.text), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTodo(todo._id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3), _createCommentVNode(\" ✅ Fixed this line \"), _createElementVNode(\"button\", {\n      onClick: $event => $options.editTodo(todo)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" ✅ Added space after v-if and fixed style \"), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","addTodo","type","$data","newTodo","$event","placeholder","_Fragment","_renderList","todos","todo","key","_id","completed","onChange","toggleTodo","_toDisplayString","text","onClick","deleteTodo","_hoisted_3","_createCommentVNode","editTodo","_hoisted_4","error","_hoisted_5"],"sources":["C:\\Users\\abhis\\Desktop\\My-Toodo-App\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"todo-app\">\n    <h2>My ToDo List</h2>\n\n    <form @submit.prevent=\"addTodo\">\n      <input type=\"text\" v-model=\"newTodo\" placeholder=\"Add todo...\" />\n      <button type=\"submit\">Add</button>\n    </form>\n\n    <ul>\n      <li v-for=\"todo in todos\" :key=\"todo._id\">\n        <label>\n          <input\n            type=\"checkbox\"\n            v-model=\"todo.completed\"\n            @change=\"toggleTodo(todo)\"\n          />\n          {{ todo.text }}\n        </label>\n\n        <div>\n          <button @click=\"deleteTodo(todo._id)\">Delete</button>\n          <!-- ✅ Fixed this line -->\n          <button @click=\"editTodo(todo)\">Edit</button>\n        </div>\n      </li>\n    </ul>\n\n    <!-- ✅ Added space after v-if and fixed style -->\n    <p v-if=\"error\" style=\"color: red;\">{{ error }}</p>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      todos: [],\n      newTodo: \"\",\n      error: \"\",\n    };\n  },\n  mounted() {\n    this.getTodos();\n  },\n  methods: {\n    async getTodos() {\n      try {\n        const res = await axios.get(\"http://localhost:3000/api/\");\n        this.todos = res.data;\n      } catch (err) {\n        this.error = \"Could not fetch todos\";\n      }\n    },\n    async addTodo() {\n      if (!this.newTodo.trim()) return;\n      try {\n        const res = await axios.post(\"http://localhost:3000/api/\", {\n          text: this.newTodo,\n          completed: false,\n        });\n        this.todos.push(res.data);\n        this.newTodo = \"\";\n      } catch (err) {\n        this.error = \"Failed to add todo\";\n      }\n    },\n    async deleteTodo(id) {\n      try {\n        await axios.delete(`http://localhost:3000/api/${id}`);\n        this.todos = this.todos.filter((todo) => todo._id !== id);\n      } catch (err) {\n        this.error = \"Failed to delete todo\";\n      }\n    },\n    async toggleTodo(todo) {\n      try {\n        await axios.put(`http://localhost:3000/api/${todo._id}`, {\n          completed: todo.completed,\n        });\n      } catch (err) {\n        this.error = \"Failed to update todo\";\n      }\n    },\n    editTodo(todo) {\n      const updatedText = prompt(\"Edit your todo:\", todo.text);\n      if (updatedText && updatedText.trim()) {\n        axios\n          .put(`http://localhost:3000/api/${todo._id}`, {\n            text: updatedText.trim(),\n            completed: todo.completed,\n          })\n          .then((res) => {\n            todo.text = res.data.text;\n          })\n          .catch(() => {\n            this.error = \"Failed to update todo text\";\n          });\n      }\n    },\n  },\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\nbody {\n  background-color: #68eddbff;\n  padding: 20px;\n}\n.todo-app {\n  padding: 10px;\n  max-width: 500px;\n  margin: auto;\n  font-family: Arial;\n}\nform {\n  margin-bottom: 20px;\n}\ninput[type=\"text\"] {\n  padding: 8px;\n  width: 70%;\n}\nbutton {\n  padding: 8px 12px;\n  margin-left: 10px;\n}\nbutton:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\nul {\n  list-style: none;\n  padding: 0;\n}\nli {\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;;;;;EA4BHC,KAAmB,EAAnB;IAAA;EAAA;;;uBA5BlBC,mBAAA,CA6BM,OA7BNC,UA6BM,G,0BA5BJC,mBAAA,CAAqB,YAAjB,cAAY,qBAEhBA,mBAAA,CAGO;IAHAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;sBAC5BJ,mBAAA,CAAiE;IAA1DO,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBH,KAAA,CAAAC,OAAO,E,6BACnCT,mBAAA,CAAkC;IAA1BO,IAAI,EAAC;EAAQ,GAAC,KAAG,oB,4BAG3BP,mBAAA,CAiBK,c,kBAhBHF,mBAAA,CAeKc,SAAA,QAAAC,WAAA,CAfcL,KAAA,CAAAM,KAAK,EAAbC,IAAI;yBAAfjB,mBAAA,CAeK;MAfsBkB,GAAG,EAAED,IAAI,CAACE;QACnCjB,mBAAA,CAOQ,gB,gBANNA,mBAAA,CAIE;MAHAO,IAAI,EAAC,UAAU;uCACNQ,IAAI,CAACG,SAAS,GAAAR,MAAA;MACtBS,QAAM,EAAAT,MAAA,IAAEL,QAAA,CAAAe,UAAU,CAACL,IAAI;6EADfA,IAAI,CAACG,SAAS,E,oBAEvB,GACF,GAAAG,gBAAA,CAAGN,IAAI,CAACO,IAAI,iB,GAGdtB,mBAAA,CAIM,cAHJA,mBAAA,CAAqD;MAA5CuB,OAAK,EAAAb,MAAA,IAAEL,QAAA,CAAAmB,UAAU,CAACT,IAAI,CAACE,GAAG;OAAG,QAAM,iBAAAQ,UAAA,GAC5CC,mBAAA,uBAA0B,EAC1B1B,mBAAA,CAA6C;MAApCuB,OAAK,EAAAb,MAAA,IAAEL,QAAA,CAAAsB,QAAQ,CAACZ,IAAI;OAAG,MAAI,iBAAAa,UAAA,E;oCAK1CF,mBAAA,8CAAiD,EACxClB,KAAA,CAAAqB,KAAK,I,cAAd/B,mBAAA,CAAmD,KAAnDgC,UAAmD,EAAAT,gBAAA,CAAZb,KAAA,CAAAqB,KAAK,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}