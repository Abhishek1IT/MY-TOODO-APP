{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      todos: [],\n      newTodo: \"\"\n    };\n  },\n  methods: {\n    async fetchTodos() {\n      const res = await axios.get(\"http://localhost:3000/todos\");\n      this.todos = res.data;\n    },\n    async addTodo() {\n      const trimmedTitle = this.newTodo.trim();\n      if (!trimmedTitle) return;\n      await axios.post(\"http://localhost:3000/todos\", {\n        title: trimmedTitle,\n        completed: false\n      });\n      this.newTodo = \"\";\n      this.fetchTodos();\n    },\n    async toggleTodo(todo) {\n      await axios.put(`http://localhost:3000/todos/${todo}`, {\n        title: todo.title,\n        completed: !todo.completed\n      });\n      this.fetchTodos();\n    },\n    async updateTodo(todo) {\n      const newTitle = prompt(\"Enter new title\", todo.title);\n      if (!newTitle || !newTitle.trim()) return;\n      const updatedTodo = {\n        ...todo,\n        title: newTitle.trim()\n      };\n      await axios.put(`http://localhost:3000/todos/${todo._id}`, updatedTodo);\n      this.fetchTodos();\n    },\n    async deleteTodo(id) {\n      await axios.delete(`http://localhost:3000/todos/${id}`);\n      this.fetchTodos();\n    }\n  },\n  mounted() {\n    this.fetchTodos();\n  }\n};","map":{"version":3,"names":["axios","data","todos","newTodo","methods","fetchTodos","res","get","addTodo","trimmedTitle","trim","post","title","completed","toggleTodo","todo","put","updateTodo","newTitle","prompt","updatedTodo","_id","deleteTodo","id","delete","mounted"],"sources":["C:\\Users\\abhis\\Desktop\\My-Toodo-App\\frontend\\src\\components\\TodoApp.vue"],"sourcesContent":["<template>\n  <div class=\"todo-app\">\n    <form @submit.prevent=\"addTodo\">\n      <input type=\"text\" v-model=\"newTodo\" placeholder=\"Add todo...\" />\n      <button type=\"submit\" :disabled=\"!newTodo.trim()\">Add</button>\n    </form>\n\n    <ul>\n      <li v-for=\"todo in todos\" :key=\"todo._id\">\n        <span>{{ todo.text }}</span>\n         <input\n          type=\"checkbox\"\n          v-model=\"todo.completed\"\n          @change=\"toggleTodo(todo)\"\n        />\n        <span :class=\"{ done: todo.completed }\">{{ todo.title }}</span>\n        <button @click=\"updateTodo(todo)\" v-if=\"!todo.completed\">\n            Edit\n        </button>\n\n        <button @click=\"deleteTodo(todo._id)\">Delete</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      todos: [],\n      newTodo: \"\"\n    };\n  },\n  methods: {\n    async fetchTodos() {\n      const res = await axios.get(\"http://localhost:3000/todos\");\n      this.todos = res.data;\n    },\n  async addTodo() {\n  const trimmedTitle = this.newTodo.trim();\n  if (!trimmedTitle) return;\n\n  await axios.post(\"http://localhost:3000/todos\", {\n    title: trimmedTitle,\n    completed: false\n  });\n\n  this.newTodo = \"\";       \n  this.fetchTodos();        \n},\n    async toggleTodo(todo) {\n  await axios.put(`http://localhost:3000/todos/${todo}`, {\n    title: todo.title,\n    completed: !todo.completed\n  });\n  this.fetchTodos();\n},\n    async updateTodo(todo) {\n    const newTitle = prompt(\"Enter new title\", todo.title);\n    if (!newTitle || !newTitle.trim()) return;\n\n    const updatedTodo = { ...todo, title: newTitle.trim() };\n    await axios.put(`http://localhost:3000/todos/${todo._id}`, updatedTodo);\n    this.fetchTodos();\n  },\n    async deleteTodo(id) {\n      await axios.delete(`http://localhost:3000/todos/${id}`);\n      this.fetchTodos();\n    }\n  },\n  mounted() {\n    this.fetchTodos();\n  }\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #68eddbff;\n  padding: 20px;\n}\n\n.todo-app {\n  padding: 10px;\n  max-width: 500px;\n  margin: auto;\n  font-family: Arial;\n}\n\nform {\n  margin-bottom: 20px;\n}\n\ninput[type=\"text\"] {\n  border: 1px solid #f7a5a5ff;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px;\n  width: 70%;\n}\n\nbutton {\n  padding: 8px 12px;\n  margin-left: 10px;\n  background-color: #7a83feff;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\nbutton:hover:not(:disabled) {\n  background-color: #96ccf3ff;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\nli {\n  padding: 6px 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nli:hover {\n  background: #f7f7f7;\n}\n\n.done {\n  text-decoration: line-through;\n  color: gray;\n}\n</style> "],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,GAAE,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC;MAC1D,IAAI,CAACL,KAAI,GAAII,GAAG,CAACL,IAAI;IACvB,CAAC;IACH,MAAMO,OAAOA,CAAA,EAAG;MAChB,MAAMC,YAAW,GAAI,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC;MACxC,IAAI,CAACD,YAAY,EAAE;MAEnB,MAAMT,KAAK,CAACW,IAAI,CAAC,6BAA6B,EAAE;QAC9CC,KAAK,EAAEH,YAAY;QACnBI,SAAS,EAAE;MACb,CAAC,CAAC;MAEF,IAAI,CAACV,OAAM,GAAI,EAAE;MACjB,IAAI,CAACE,UAAU,CAAC,CAAC;IACnB,CAAC;IACG,MAAMS,UAAUA,CAACC,IAAI,EAAE;MACzB,MAAMf,KAAK,CAACgB,GAAG,CAAC,+BAA+BD,IAAI,EAAE,EAAE;QACrDH,KAAK,EAAEG,IAAI,CAACH,KAAK;QACjBC,SAAS,EAAE,CAACE,IAAI,CAACF;MACnB,CAAC,CAAC;MACF,IAAI,CAACR,UAAU,CAAC,CAAC;IACnB,CAAC;IACG,MAAMY,UAAUA,CAACF,IAAI,EAAE;MACvB,MAAMG,QAAO,GAAIC,MAAM,CAAC,iBAAiB,EAAEJ,IAAI,CAACH,KAAK,CAAC;MACtD,IAAI,CAACM,QAAO,IAAK,CAACA,QAAQ,CAACR,IAAI,CAAC,CAAC,EAAE;MAEnC,MAAMU,WAAU,GAAI;QAAE,GAAGL,IAAI;QAAEH,KAAK,EAAEM,QAAQ,CAACR,IAAI,CAAC;MAAE,CAAC;MACvD,MAAMV,KAAK,CAACgB,GAAG,CAAC,+BAA+BD,IAAI,CAACM,GAAG,EAAE,EAAED,WAAW,CAAC;MACvE,IAAI,CAACf,UAAU,CAAC,CAAC;IACnB,CAAC;IACC,MAAMiB,UAAUA,CAACC,EAAE,EAAE;MACnB,MAAMvB,KAAK,CAACwB,MAAM,CAAC,+BAA+BD,EAAE,EAAE,CAAC;MACvD,IAAI,CAAClB,UAAU,CAAC,CAAC;IACnB;EACF,CAAC;EACDoB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACpB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}